import os

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, ContextTypes, filters
)
from telegram.error import TelegramError
print(os.getenv("TELEGRAM_TOKEN"))
print(os.getenv("ADMIN_ID"))
TOKEN = os.getenv("TELEGRAM_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# üíæ –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
user_state = {}
current_rate = { "usdt": None }  # –†—É—á–Ω–æ–π –∫—É—Ä—Å

# üì± –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üí∞ –ö—É–ø–∏—Ç—å USDT", callback_data="buy")],
        [InlineKeyboardButton("üí∏ –ü—Ä–æ–¥–∞—Ç—å USDT", callback_data="sell")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# üìä –ö–æ–º–∞–Ω–¥–∞ /rate ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –≤—Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—É—Ä—Å
async def rate(update: Update, context: ContextTypes.DEFAULT_TYPE):
    rate = current_rate["usdt"]
    if rate:
        await update.message.reply_text(f"üí± –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å USDT: {rate} ‚ÇΩ")
    else:
        await update.message.reply_text("–ö—É—Ä—Å USDT –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

# üîß –ö–æ–º–∞–Ω–¥–∞ /setrate ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫—É—Ä—Å (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
async def set_rate(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –≤–∏–¥–µ–ª–∏

    if not context.args:
        await update.message.reply_text("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /setrate 93.5")
        return

    try:
        rate = float(context.args[0])
        current_rate["usdt"] = rate
        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å
        await update.message.delete()
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await context.bot.send_message(ADMIN_ID, f"‚úÖ –ö—É—Ä—Å USDT —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {rate} ‚ÇΩ")
    except ValueError:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: /setrate 93.5")

# ü§ñ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    action = query.data
    user_state[user_id] = {'action': action}

    rate = current_rate["usdt"]
    rate_text = f"\nüí± –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: {rate} ‚ÇΩ" if rate else "\n‚ö†Ô∏è –ö—É—Ä—Å –ø–æ–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."

    await query.edit_message_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {'–ø–æ–∫—É–ø–∫—É' if action == 'buy' else '–ø—Ä–æ–¥–∞–∂—É'} USDT.{rate_text}\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:"
    )

# üèô –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
async def handle_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or f"id: {user_id}"
    city = update.message.text.strip()

    user = update.effective_user

    print('user', user)

    if user_id not in user_state or 'action' not in user_state[user_id]:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ /start.")
        return

    action = user_state[user_id]['action']
    action_text = "–ö–£–ü–ò–¢–¨" if action == "buy" else "–ü–†–û–î–ê–¢–¨"
    del user_state[user_id]

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=f"üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
            f"üéØ –î–µ–π—Å—Ç–≤–∏–µ: {action_text}\n"
            f"üåç –ì–æ—Ä–æ–¥: {city}"
    )

async def error_handler(update, context):
    print(f"Exception while handling update: {update}")
    import traceback
    traceback.print_exception(type(context.error), context.error, context.error.__traceback__)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("rate", rate))
    app.add_handler(CommandHandler("setrate", set_rate))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_city))
    app.add_error_handler(error_handler)

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    main()